// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
    id          String  @id    @default(cuid())
    email       String?  @unique
    phone       String?  @unique

    name        String?
    birthday    String?

    OTP         String?
    emailUnsubscribeToken   String?   @unique   @default(cuid())

    isEmailVerified   Boolean   @default(false)
    isPhoneVerified   Boolean   @default(false)
    isEmailSubscribed Boolean @default(false)
    isPhoneSubscribed Boolean @default(false) 

    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt  
}

model Owner {
  id        String  @id   @default(cuid())
  email     String   @unique
  phone     String?  @unique
  name      String?
  avatar    String?
  OTP       String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Banner {
  id        String  @id   @default(cuid())
  label     String
  image     String
  
  categories  Category[]
  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Category {
  id      String    @id   @default(cuid())
  title   String    @unique
  description   String?
  

  products    Product[]
  banners     Banner[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id    String    @id     @default(cuid())
  title String
  description   String?
  images        String[]
  keywords      String[]
  meta          Json?

  price         Float
  discount      Float @default(0)
  stock         Int   @default(0)

  isAvailable Boolean @default(false)
  isFeatured  Boolean @default(false)

  categories    Category[]

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

}